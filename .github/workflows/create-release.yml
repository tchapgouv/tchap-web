name: Create tag and release for tchap-web

on: 
  push:
    tags:
    - 'v*'

jobs:
  build-archive:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      - name: Get Node Version
        id: node_version
        run: echo ::set-output name=node_version::$(node -e 'console.log(require("./package.json").engines.node)')
      - name: Use Node.js ${{ steps.node_version.outputs.node_version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ steps.node_version.outputs.node_version }}
      - name: Get Tchap web Version
        id: version
        run: echo ::set-output name=version::$(node -e 'console.log(require("./package.json").version)')
      - name: Build the archive ${{ steps.version.outputs.version }} for dev
        run: scripts/package-github.sh
        env:
          CONFIG: dev
      - name: Build the archive ${{ steps.version.outputs.version }} for preprod
        run: scripts/package-github.sh
        env:
          CONFIG: preprod
      - name: Build the archive ${{ steps.version.outputs.version }} for prod
        run: scripts/package-github.sh
        env:
          CONFIG: prod
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m%d')"
      - name: Create tchap-web release
        uses: ncipollo/release-action@v1
        with:
          tag: "v${{ steps.version.outputs.version }}-tchap"
          generateReleaseNotes: true
          artifacts: >
            /home/runner/work/tchap-web/tchap-web/tchap-${{ steps.version.outputs.version }}-dev-${{ steps.date.outputs.date }}.tar.gz,
            /home/runner/work/tchap-web/tchap-web/tchap-${{ steps.version.outputs.version }}-preprod-${{ steps.date.outputs.date }}.tar.gz,
            /home/runner/work/tchap-web/tchap-web/tchap-${{ steps.version.outputs.version }}-prod-${{ steps.date.outputs.date }}.tar.gz
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish release for dev
        run: scripts/publish_s3.sh /home/runner/work/tchap-web/tchap-web/tchap-${{ steps.version.outputs.version }}-dev-${{ steps.date.outputs.date }}.tar.gz
        env:
          S3ACCESS: ${{ secrets.S3ACCESS }}
          S3SECRET: ${{ secrets.S3SECRET }}
          S3BUCKET: ${{ secrets.S3BUCKET }}
      - name: Publish release for preprod
        run: scripts/publish_s3.sh /home/runner/work/tchap-web/tchap-web/tchap-${{ steps.version.outputs.version }}-preprod-${{ steps.date.outputs.date }}.tar.gz
        env:
          S3ACCESS: ${{ secrets.S3ACCESS }}
          S3SECRET: ${{ secrets.S3SECRET }}
          S3BUCKET: ${{ secrets.S3BUCKET }}
      - name: Publish release for prod
        run: scripts/publish_s3.sh /home/runner/work/tchap-web/tchap-web/tchap-${{ steps.version.outputs.version }}-prod-${{ steps.date.outputs.date }}.tar.gz
        env:
          S3ACCESS: ${{ secrets.S3ACCESS }}
          S3SECRET: ${{ secrets.S3SECRET }}
          S3BUCKET: ${{ secrets.S3BUCKET }}