{"version":3,"sources":["(webpack)/buildin/amd-define.js","src/async-components/views/dialogs/keybackup/CreateKeyBackupDialog.js","matrix-react-sdk/node_modules/file-saver/FileSaver.js","src/utils/PasswordScorer.js"],"names":["module","exports","Error","PHASE_PASSPHRASE","PHASE_DONE","React","createClass","getInitialState","phase","passPhrase","passPhraseConfirm","copied","downloaded","zxcvbnResult","setPassPhrase","componentWillMount","this","_recoveryKeyNode","_keyBackupInfo","_setZxcvbnResultTimeout","componentWillUnmount","clearTimeout","_collectRecoveryKeyNode","n","_onCopyClick","target","range","document","createRange","selectNodeContents","selection","window","getSelection","removeAllRanges","addRange","selectText","execCommand","setState","_onDownloadClick","blob","Blob","recovery_key","type","FileSaver","saveAs","_createBackup","error","info","MatrixClientPeg","get","createKeyBackupVersion","scheduleAllGroupSessionsForBackup","console","log","deleteKeyBackupVersion","version","_onCancel","props","onFinished","_onDone","_onOptOutClick","_onSetUpClick","_onSkipPassPhraseClick","prepareKeyBackupVersion","_onPassPhraseNextClick","_onPassPhraseKeyPress","e","key","resolve","scorePassword","state","_passPhraseIsValid","_onPassPhraseConfirmNextClick","_onPassPhraseConfirmKeyPress","_onSetAgainClick","_onKeepItSafeBackClick","_onPassPhraseChange","value","setTimeout","_onPassPhraseConfirmChange","score","_renderPhasePassPhrase","DialogButtons","sdk","getComponent","strengthMeter","helpText","_t","suggestions","i","feedback","length","push","suggestionBlock","warning","max","b","sub","className","onChange","onKeyPress","placeholder","autoFocus","primaryButton","onPrimaryButtonClick","hasCancel","disabled","onClick","_renderPhasePassPhraseConfirm","AccessibleButton","matchText","startsWith","passPhraseMatch","element","_renderPhaseShowKey","bodyText","ref","_renderPhaseKeepItSafe","introText","s","_renderBusyPhase","text","Spinner","_renderPhaseDone","_renderPhaseOptOutConfirm","_titleForPhase","render","BaseDialog","content","onCancel","title","includes","view","navigator","test","userAgent","doc","get_URL","URL","webkitURL","save_link","createElementNS","can_use_save_link","is_safari","HTMLElement","safari","is_chrome_ios","throw_outside","ex","setImmediate","revoke","file","revokeObjectURL","remove","auto_bom","String","fromCharCode","name","no_auto_bom","object_url","filesaver","force","dispatch_all","event_types","event","concat","listener","call","dispatch","split","readyState","INIT","createObjectURL","node","href","download","MouseEvent","dispatchEvent","DONE","FileReader","reader","onloadend","url","result","replace","open","location","undefined","readAsDataURL","fs_error","FS_proto","prototype","msSaveOrOpenBlob","abort","WRITING","onwritestart","onprogress","onwrite","onabort","onerror","onwriteend","self","password","userInputs","ZXCVBN_USER_INPUTS","slice","getUserIdLocalpart","resultNoSpaces","_td"],"mappings":"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","file":"bundles/8e76bef9cb7d6117e02d/1.js","sourcesContent":["module.exports = function() {\n\tthrow new Error(\"define cannot be used indirect\");\n};\n","/*\nCopyright 2018, 2019 New Vector Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport React from 'react';\nimport sdk from '../../../../index';\nimport MatrixClientPeg from '../../../../MatrixClientPeg';\nimport { scorePassword } from '../../../../utils/PasswordScorer';\n\nimport FileSaver from 'file-saver';\n\nimport { _t } from '../../../../languageHandler';\n\nconst PHASE_PASSPHRASE = 0;\nconst PHASE_PASSPHRASE_CONFIRM = 1;\nconst PHASE_SHOWKEY = 2;\nconst PHASE_KEEPITSAFE = 3;\nconst PHASE_BACKINGUP = 4;\nconst PHASE_DONE = 5;\nconst PHASE_OPTOUT_CONFIRM = 6;\n\nconst PASSWORD_MIN_SCORE = 4; // So secure, many characters, much complex, wow, etc, etc.\nconst PASSPHRASE_FEEDBACK_DELAY = 500; // How long after keystroke to offer passphrase feedback, ms.\n\n// XXX: copied from ShareDialog: factor out into utils\nfunction selectText(target) {\n    const range = document.createRange();\n    range.selectNodeContents(target);\n\n    const selection = window.getSelection();\n    selection.removeAllRanges();\n    selection.addRange(range);\n}\n\n/**\n * Walks the user through the process of creating an e2e key backup\n * on the server.\n */\nexport default React.createClass({\n    getInitialState: function() {\n        return {\n            phase: PHASE_PASSPHRASE,\n            passPhrase: '',\n            passPhraseConfirm: '',\n            copied: false,\n            downloaded: false,\n            zxcvbnResult: null,\n            setPassPhrase: false,\n        };\n    },\n\n    componentWillMount: function() {\n        this._recoveryKeyNode = null;\n        this._keyBackupInfo = null;\n        this._setZxcvbnResultTimeout = null;\n    },\n\n    componentWillUnmount: function() {\n        if (this._setZxcvbnResultTimeout !== null) {\n            clearTimeout(this._setZxcvbnResultTimeout);\n        }\n    },\n\n    _collectRecoveryKeyNode: function(n) {\n        this._recoveryKeyNode = n;\n    },\n\n    _onCopyClick: function() {\n        selectText(this._recoveryKeyNode);\n        const successful = document.execCommand('copy');\n        if (successful) {\n            this.setState({\n                copied: true,\n                phase: PHASE_KEEPITSAFE,\n            });\n        }\n    },\n\n    _onDownloadClick: function() {\n        const blob = new Blob([this._keyBackupInfo.recovery_key], {\n            type: 'text/plain;charset=us-ascii',\n        });\n        FileSaver.saveAs(blob, 'recovery-key.txt');\n\n        this.setState({\n            downloaded: true,\n            phase: PHASE_KEEPITSAFE,\n        });\n    },\n\n    _createBackup: async function() {\n        this.setState({\n            phase: PHASE_BACKINGUP,\n            error: null,\n        });\n        let info;\n        try {\n            info = await MatrixClientPeg.get().createKeyBackupVersion(\n                this._keyBackupInfo,\n            );\n            await MatrixClientPeg.get().scheduleAllGroupSessionsForBackup();\n            this.setState({\n                phase: PHASE_DONE,\n            });\n        } catch (e) {\n            console.log(\"Error creating key backup\", e);\n            // TODO: If creating a version succeeds, but backup fails, should we\n            // delete the version, disable backup, or do nothing?  If we just\n            // disable without deleting, we'll enable on next app reload since\n            // it is trusted.\n            if (info) {\n                MatrixClientPeg.get().deleteKeyBackupVersion(info.version);\n            }\n            this.setState({\n                error: e,\n            });\n        }\n    },\n\n    _onCancel: function() {\n        this.props.onFinished(false);\n    },\n\n    _onDone: function() {\n        this.props.onFinished(true);\n    },\n\n    _onOptOutClick: function() {\n        this.setState({phase: PHASE_OPTOUT_CONFIRM});\n    },\n\n    _onSetUpClick: function() {\n        this.setState({phase: PHASE_PASSPHRASE});\n    },\n\n    _onSkipPassPhraseClick: async function() {\n        this._keyBackupInfo = await MatrixClientPeg.get().prepareKeyBackupVersion();\n        this.setState({\n            copied: false,\n            downloaded: false,\n            phase: PHASE_SHOWKEY,\n        });\n    },\n\n    _onPassPhraseNextClick: function() {\n        this.setState({phase: PHASE_PASSPHRASE_CONFIRM});\n    },\n\n    _onPassPhraseKeyPress: async function(e) {\n        if (e.key === 'Enter') {\n            // If we're waiting for the timeout before updating the result at this point,\n            // skip ahead and do it now, otherwise we'll deny the attempt to proceed\n            // even if the user entered a valid passphrase\n            if (this._setZxcvbnResultTimeout !== null) {\n                clearTimeout(this._setZxcvbnResultTimeout);\n                this._setZxcvbnResultTimeout = null;\n                await new Promise((resolve) => {\n                    this.setState({\n                        zxcvbnResult: scorePassword(this.state.passPhrase),\n                    }, resolve);\n                });\n            }\n            if (this._passPhraseIsValid()) {\n                this._onPassPhraseNextClick();\n            }\n        }\n    },\n\n    _onPassPhraseConfirmNextClick: async function() {\n        this._keyBackupInfo = await MatrixClientPeg.get().prepareKeyBackupVersion(this.state.passPhrase);\n        this.setState({\n            setPassPhrase: true,\n            copied: false,\n            downloaded: false,\n            phase: PHASE_SHOWKEY,\n        });\n    },\n\n    _onPassPhraseConfirmKeyPress: function(e) {\n        if (e.key === 'Enter' && this.state.passPhrase === this.state.passPhraseConfirm) {\n            this._onPassPhraseConfirmNextClick();\n        }\n    },\n\n    _onSetAgainClick: function() {\n        this.setState({\n            passPhrase: '',\n            passPhraseConfirm: '',\n            phase: PHASE_PASSPHRASE,\n            zxcvbnResult: null,\n        });\n    },\n\n    _onKeepItSafeBackClick: function() {\n        this.setState({\n            phase: PHASE_SHOWKEY,\n        });\n    },\n\n    _onPassPhraseChange: function(e) {\n        this.setState({\n            passPhrase: e.target.value,\n        });\n\n        if (this._setZxcvbnResultTimeout !== null) {\n            clearTimeout(this._setZxcvbnResultTimeout);\n        }\n        this._setZxcvbnResultTimeout = setTimeout(() => {\n            this._setZxcvbnResultTimeout = null;\n            this.setState({\n                // precompute this and keep it in state: zxcvbn is fast but\n                // we use it in a couple of different places so no point recomputing\n                // it unnecessarily.\n                zxcvbnResult: scorePassword(this.state.passPhrase),\n            });\n        }, PASSPHRASE_FEEDBACK_DELAY);\n    },\n\n    _onPassPhraseConfirmChange: function(e) {\n        this.setState({\n            passPhraseConfirm: e.target.value,\n        });\n    },\n\n    _passPhraseIsValid: function() {\n        return this.state.zxcvbnResult && this.state.zxcvbnResult.score >= PASSWORD_MIN_SCORE;\n    },\n\n    _renderPhasePassPhrase: function() {\n        const DialogButtons = sdk.getComponent('views.elements.DialogButtons');\n\n        let strengthMeter;\n        let helpText;\n        if (this.state.zxcvbnResult) {\n            if (this.state.zxcvbnResult.score >= PASSWORD_MIN_SCORE) {\n                helpText = _t(\"Great! This passphrase looks strong enough.\");\n            } else {\n                const suggestions = [];\n                for (let i = 0; i < this.state.zxcvbnResult.feedback.suggestions.length; ++i) {\n                    suggestions.push(<div key={i}>{this.state.zxcvbnResult.feedback.suggestions[i]}</div>);\n                }\n                const suggestionBlock = <div>{suggestions.length > 0 ? suggestions : _t(\"Keep going...\")}</div>;\n\n                helpText = <div>\n                    {this.state.zxcvbnResult.feedback.warning}\n                    {suggestionBlock}\n                </div>;\n            }\n            strengthMeter = <div>\n                <progress max={PASSWORD_MIN_SCORE} value={this.state.zxcvbnResult.score} />\n            </div>;\n        }\n\n        return <div>\n            <p>{_t(\n                \"<b>Warning</b>: you should only set up key backup from a trusted computer.\", {},\n                { b: sub => <b>{sub}</b> },\n            )}</p>\n            <p>{_t(\n                \"We'll store an encrypted copy of your keys on our server. \" +\n                \"Protect your backup with a passphrase to keep it secure.\",\n            )}</p>\n            <p>{_t(\"For maximum security, this should be different from your account password.\")}</p>\n\n            <div className=\"mx_CreateKeyBackupDialog_primaryContainer\">\n                <div className=\"mx_CreateKeyBackupDialog_passPhraseContainer\">\n                    <input type=\"password\"\n                        onChange={this._onPassPhraseChange}\n                        onKeyPress={this._onPassPhraseKeyPress}\n                        value={this.state.passPhrase}\n                        className=\"mx_CreateKeyBackupDialog_passPhraseInput\"\n                        placeholder={_t(\"Enter a passphrase...\")}\n                        autoFocus={true}\n                    />\n                    <div className=\"mx_CreateKeyBackupDialog_passPhraseHelp\">\n                        {strengthMeter}\n                        {helpText}\n                    </div>\n                </div>\n            </div>\n\n            <DialogButtons primaryButton={_t('Next')}\n                onPrimaryButtonClick={this._onPassPhraseNextClick}\n                hasCancel={false}\n                disabled={!this._passPhraseIsValid()}\n            />\n\n            <details>\n                <summary>{_t(\"Advanced\")}</summary>\n                <p><button onClick={this._onSkipPassPhraseClick} >\n                    {_t(\"Set up with a Recovery Key\")}\n                </button></p>\n            </details>\n        </div>;\n    },\n\n    _renderPhasePassPhraseConfirm: function() {\n        const AccessibleButton = sdk.getComponent('elements.AccessibleButton');\n\n        let matchText;\n        if (this.state.passPhraseConfirm === this.state.passPhrase) {\n            matchText = _t(\"That matches!\");\n        } else if (!this.state.passPhrase.startsWith(this.state.passPhraseConfirm)) {\n            // only tell them they're wrong if they've actually gone wrong.\n            // Security concious readers will note that if you left riot-web unattended\n            // on this screen, this would make it easy for a malicious person to guess\n            // your passphrase one letter at a time, but they could get this faster by\n            // just opening the browser's developer tools and reading it.\n            // Note that not having typed anything at all will not hit this clause and\n            // fall through so empty box === no hint.\n            matchText = _t(\"That doesn't match.\");\n        }\n\n        let passPhraseMatch = null;\n        if (matchText) {\n            passPhraseMatch = <div className=\"mx_CreateKeyBackupDialog_passPhraseMatch\">\n                <div>{matchText}</div>\n                <div>\n                    <AccessibleButton element=\"span\" className=\"mx_linkButton\" onClick={this._onSetAgainClick}>\n                        {_t(\"Go back to set it again.\")}\n                    </AccessibleButton>\n                </div>\n            </div>;\n        }\n        const DialogButtons = sdk.getComponent('views.elements.DialogButtons');\n        return <div>\n            <p>{_t(\n                \"Please enter your passphrase a second time to confirm.\",\n            )}</p>\n            <div className=\"mx_CreateKeyBackupDialog_primaryContainer\">\n                <div className=\"mx_CreateKeyBackupDialog_passPhraseContainer\">\n                    <div>\n                        <input type=\"password\"\n                            onChange={this._onPassPhraseConfirmChange}\n                            onKeyPress={this._onPassPhraseConfirmKeyPress}\n                            value={this.state.passPhraseConfirm}\n                            className=\"mx_CreateKeyBackupDialog_passPhraseInput\"\n                            placeholder={_t(\"Repeat your passphrase...\")}\n                            autoFocus={true}\n                        />\n                    </div>\n                    {passPhraseMatch}\n                </div>\n            </div>\n            <DialogButtons primaryButton={_t('Next')}\n                onPrimaryButtonClick={this._onPassPhraseConfirmNextClick}\n                hasCancel={false}\n                disabled={this.state.passPhrase !== this.state.passPhraseConfirm}\n            />\n        </div>;\n    },\n\n    _renderPhaseShowKey: function() {\n        let bodyText;\n        if (this.state.setPassPhrase) {\n            bodyText = _t(\n                \"As a safety net, you can use it to restore your encrypted message \" +\n                \"history if you forget your Recovery Passphrase.\",\n            );\n        } else {\n            bodyText = _t(\"As a safety net, you can use it to restore your encrypted message history.\");\n        }\n\n        return <div>\n            <p>{_t(\n                \"Your recovery key is a safety net - you can use it to restore \" +\n                \"access to your encrypted messages if you forget your passphrase.\",\n            )}</p>\n            <p>{_t(\n                \"Keep your recovery key somewhere very secure, like a password manager (or a safe)\",\n            )}</p>\n            <p>{bodyText}</p>\n            <div className=\"mx_CreateKeyBackupDialog_primaryContainer\">\n                <div className=\"mx_CreateKeyBackupDialog_recoveryKeyHeader\">\n                    {_t(\"Your Recovery Key\")}\n                </div>\n                <div className=\"mx_CreateKeyBackupDialog_recoveryKeyContainer\">\n                    <div className=\"mx_CreateKeyBackupDialog_recoveryKey\">\n                        <code ref={this._collectRecoveryKeyNode}>{this._keyBackupInfo.recovery_key}</code>\n                    </div>\n                    <div className=\"mx_CreateKeyBackupDialog_recoveryKeyButtons\">\n                        <button className=\"mx_Dialog_primary\" onClick={this._onCopyClick}>\n                            {_t(\"Copy to clipboard\")}\n                        </button>\n                        <button className=\"mx_Dialog_primary\" onClick={this._onDownloadClick}>\n                            {_t(\"Download\")}\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>;\n    },\n\n    _renderPhaseKeepItSafe: function() {\n        let introText;\n        if (this.state.copied) {\n            introText = _t(\n                \"Your Recovery Key has been <b>copied to your clipboard</b>, paste it to:\",\n                {}, {b: s => <b>{s}</b>},\n            );\n        } else if (this.state.downloaded) {\n            introText = _t(\n                \"Your Recovery Key is in your <b>Downloads</b> folder.\",\n                {}, {b: s => <b>{s}</b>},\n            );\n        }\n        const DialogButtons = sdk.getComponent('views.elements.DialogButtons');\n        return <div>\n            {introText}\n            <ul>\n                <li>{_t(\"<b>Print it</b> and store it somewhere safe\", {}, {b: s => <b>{s}</b>})}</li>\n                <li>{_t(\"<b>Save it</b> on a USB key or backup drive\", {}, {b: s => <b>{s}</b>})}</li>\n                <li>{_t(\"<b>Copy it</b> to your personal cloud storage\", {}, {b: s => <b>{s}</b>})}</li>\n            </ul>\n            <DialogButtons primaryButton={_t(\"OK\")}\n                onPrimaryButtonClick={this._createBackup}\n                hasCancel={false}>\n                <button onClick={this._onKeepItSafeBackClick}>{_t(\"Back\")}</button>\n            </DialogButtons>\n        </div>;\n    },\n\n    _renderBusyPhase: function(text) {\n        const Spinner = sdk.getComponent('views.elements.Spinner');\n        return <div>\n            <Spinner />\n        </div>;\n    },\n\n    _renderPhaseDone: function() {\n        const DialogButtons = sdk.getComponent('views.elements.DialogButtons');\n        return <div>\n            <p>{_t(\n                \"Your keys are being backed up (the first backup could take a few minutes).\",\n            )}</p>\n            <DialogButtons primaryButton={_t('Okay')}\n                onPrimaryButtonClick={this._onDone}\n                hasCancel={false}\n            />\n        </div>;\n    },\n\n    _renderPhaseOptOutConfirm: function() {\n        const DialogButtons = sdk.getComponent('views.elements.DialogButtons');\n        return <div>\n            {_t(\n                \"Without setting up Secure Message Recovery, you won't be able to restore your \" +\n                \"encrypted message history if you log out or use another device.\",\n            )}\n            <DialogButtons primaryButton={_t('Set up Secure Message Recovery')}\n                onPrimaryButtonClick={this._onSetUpClick}\n                hasCancel={false}\n            >\n                <button onClick={this._onCancel}>I understand, continue without</button>\n            </DialogButtons>\n        </div>;\n    },\n\n    _titleForPhase: function(phase) {\n        switch (phase) {\n            case PHASE_PASSPHRASE:\n                return _t('Secure your backup with a passphrase');\n            case PHASE_PASSPHRASE_CONFIRM:\n                return _t('Confirm your passphrase');\n            case PHASE_OPTOUT_CONFIRM:\n                return _t('Warning!');\n            case PHASE_SHOWKEY:\n                return _t('Recovery key');\n            case PHASE_KEEPITSAFE:\n                return _t('Keep it safe');\n            case PHASE_BACKINGUP:\n                return _t('Starting backup...');\n            case PHASE_DONE:\n                return _t('Success!');\n            default:\n                return _t(\"Create Key Backup\");\n        }\n    },\n\n    render: function() {\n        const BaseDialog = sdk.getComponent('views.dialogs.BaseDialog');\n\n        let content;\n        if (this.state.error) {\n            const DialogButtons = sdk.getComponent('views.elements.DialogButtons');\n            content = <div>\n                <p>{_t(\"Unable to create key backup\")}</p>\n                <div className=\"mx_Dialog_buttons\">\n                    <DialogButtons primaryButton={_t('Retry')}\n                        onPrimaryButtonClick={this._createBackup}\n                        hasCancel={true}\n                        onCancel={this._onCancel}\n                    />\n                </div>\n            </div>;\n        } else {\n            switch (this.state.phase) {\n                case PHASE_PASSPHRASE:\n                    content = this._renderPhasePassPhrase();\n                    break;\n                case PHASE_PASSPHRASE_CONFIRM:\n                    content = this._renderPhasePassPhraseConfirm();\n                    break;\n                case PHASE_SHOWKEY:\n                    content = this._renderPhaseShowKey();\n                    break;\n                case PHASE_KEEPITSAFE:\n                    content = this._renderPhaseKeepItSafe();\n                    break;\n                case PHASE_BACKINGUP:\n                    content = this._renderBusyPhase();\n                    break;\n                case PHASE_DONE:\n                    content = this._renderPhaseDone();\n                    break;\n                case PHASE_OPTOUT_CONFIRM:\n                    content = this._renderPhaseOptOutConfirm();\n                    break;\n            }\n        }\n\n        return (\n            <BaseDialog className='mx_CreateKeyBackupDialog'\n                onFinished={this.props.onFinished}\n                title={this._titleForPhase(this.state.phase)}\n                hasCancel={[PHASE_PASSPHRASE, PHASE_DONE].includes(this.state.phase)}\n            >\n            <div>\n                {content}\n            </div>\n            </BaseDialog>\n        );\n    },\n});\n","/* FileSaver.js\n * A saveAs() FileSaver implementation.\n * 1.3.2\n * 2016-06-16 18:25:19\n *\n * By Eli Grey, http://eligrey.com\n * License: MIT\n *   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\n */\n\n/*global self */\n/*jslint bitwise: true, indent: 4, laxbreak: true, laxcomma: true, smarttabs: true, plusplus: true */\n\n/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */\n\nvar saveAs = saveAs || (function(view) {\n\t\"use strict\";\n\t// IE <10 is explicitly unsupported\n\tif (typeof view === \"undefined\" || typeof navigator !== \"undefined\" && /MSIE [1-9]\\./.test(navigator.userAgent)) {\n\t\treturn;\n\t}\n\tvar\n\t\t  doc = view.document\n\t\t  // only get URL when necessary in case Blob.js hasn't overridden it yet\n\t\t, get_URL = function() {\n\t\t\treturn view.URL || view.webkitURL || view;\n\t\t}\n\t\t, save_link = doc.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\")\n\t\t, can_use_save_link = \"download\" in save_link\n\t\t, click = function(node) {\n\t\t\tvar event = new MouseEvent(\"click\");\n\t\t\tnode.dispatchEvent(event);\n\t\t}\n\t\t, is_safari = /constructor/i.test(view.HTMLElement) || view.safari\n\t\t, is_chrome_ios =/CriOS\\/[\\d]+/.test(navigator.userAgent)\n\t\t, throw_outside = function(ex) {\n\t\t\t(view.setImmediate || view.setTimeout)(function() {\n\t\t\t\tthrow ex;\n\t\t\t}, 0);\n\t\t}\n\t\t, force_saveable_type = \"application/octet-stream\"\n\t\t// the Blob API is fundamentally broken as there is no \"downloadfinished\" event to subscribe to\n\t\t, arbitrary_revoke_timeout = 1000 * 40 // in ms\n\t\t, revoke = function(file) {\n\t\t\tvar revoker = function() {\n\t\t\t\tif (typeof file === \"string\") { // file is an object URL\n\t\t\t\t\tget_URL().revokeObjectURL(file);\n\t\t\t\t} else { // file is a File\n\t\t\t\t\tfile.remove();\n\t\t\t\t}\n\t\t\t};\n\t\t\tsetTimeout(revoker, arbitrary_revoke_timeout);\n\t\t}\n\t\t, dispatch = function(filesaver, event_types, event) {\n\t\t\tevent_types = [].concat(event_types);\n\t\t\tvar i = event_types.length;\n\t\t\twhile (i--) {\n\t\t\t\tvar listener = filesaver[\"on\" + event_types[i]];\n\t\t\t\tif (typeof listener === \"function\") {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlistener.call(filesaver, event || filesaver);\n\t\t\t\t\t} catch (ex) {\n\t\t\t\t\t\tthrow_outside(ex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t, auto_bom = function(blob) {\n\t\t\t// prepend BOM for UTF-8 XML and text/* types (including HTML)\n\t\t\t// note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n\t\t\tif (/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n\t\t\t\treturn new Blob([String.fromCharCode(0xFEFF), blob], {type: blob.type});\n\t\t\t}\n\t\t\treturn blob;\n\t\t}\n\t\t, FileSaver = function(blob, name, no_auto_bom) {\n\t\t\tif (!no_auto_bom) {\n\t\t\t\tblob = auto_bom(blob);\n\t\t\t}\n\t\t\t// First try a.download, then web filesystem, then object URLs\n\t\t\tvar\n\t\t\t\t  filesaver = this\n\t\t\t\t, type = blob.type\n\t\t\t\t, force = type === force_saveable_type\n\t\t\t\t, object_url\n\t\t\t\t, dispatch_all = function() {\n\t\t\t\t\tdispatch(filesaver, \"writestart progress write writeend\".split(\" \"));\n\t\t\t\t}\n\t\t\t\t// on any filesys errors revert to saving with object URLs\n\t\t\t\t, fs_error = function() {\n\t\t\t\t\tif ((is_chrome_ios || (force && is_safari)) && view.FileReader) {\n\t\t\t\t\t\t// Safari doesn't allow downloading of blob urls\n\t\t\t\t\t\tvar reader = new FileReader();\n\t\t\t\t\t\treader.onloadend = function() {\n\t\t\t\t\t\t\tvar url = is_chrome_ios ? reader.result : reader.result.replace(/^data:[^;]*;/, 'data:attachment/file;');\n\t\t\t\t\t\t\tvar popup = view.open(url, '_blank');\n\t\t\t\t\t\t\tif(!popup) view.location.href = url;\n\t\t\t\t\t\t\turl=undefined; // release reference before dispatching\n\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\tdispatch_all();\n\t\t\t\t\t\t};\n\t\t\t\t\t\treader.readAsDataURL(blob);\n\t\t\t\t\t\tfilesaver.readyState = filesaver.INIT;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// don't create more object URLs than needed\n\t\t\t\t\tif (!object_url) {\n\t\t\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\t\t}\n\t\t\t\t\tif (force) {\n\t\t\t\t\t\tview.location.href = object_url;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar opened = view.open(object_url, \"_blank\");\n\t\t\t\t\t\tif (!opened) {\n\t\t\t\t\t\t\t// Apple does not allow window.open, see https://developer.apple.com/library/safari/documentation/Tools/Conceptual/SafariExtensionGuide/WorkingwithWindowsandTabs/WorkingwithWindowsandTabs.html\n\t\t\t\t\t\t\tview.location.href = object_url;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\tdispatch_all();\n\t\t\t\t\trevoke(object_url);\n\t\t\t\t}\n\t\t\t;\n\t\t\tfilesaver.readyState = filesaver.INIT;\n\n\t\t\tif (can_use_save_link) {\n\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tsave_link.href = object_url;\n\t\t\t\t\tsave_link.download = name;\n\t\t\t\t\tclick(save_link);\n\t\t\t\t\tdispatch_all();\n\t\t\t\t\trevoke(object_url);\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfs_error();\n\t\t}\n\t\t, FS_proto = FileSaver.prototype\n\t\t, saveAs = function(blob, name, no_auto_bom) {\n\t\t\treturn new FileSaver(blob, name || blob.name || \"download\", no_auto_bom);\n\t\t}\n\t;\n\t// IE 10+ (native saveAs)\n\tif (typeof navigator !== \"undefined\" && navigator.msSaveOrOpenBlob) {\n\t\treturn function(blob, name, no_auto_bom) {\n\t\t\tname = name || blob.name || \"download\";\n\n\t\t\tif (!no_auto_bom) {\n\t\t\t\tblob = auto_bom(blob);\n\t\t\t}\n\t\t\treturn navigator.msSaveOrOpenBlob(blob, name);\n\t\t};\n\t}\n\n\tFS_proto.abort = function(){};\n\tFS_proto.readyState = FS_proto.INIT = 0;\n\tFS_proto.WRITING = 1;\n\tFS_proto.DONE = 2;\n\n\tFS_proto.error =\n\tFS_proto.onwritestart =\n\tFS_proto.onprogress =\n\tFS_proto.onwrite =\n\tFS_proto.onabort =\n\tFS_proto.onerror =\n\tFS_proto.onwriteend =\n\t\tnull;\n\n\treturn saveAs;\n}(\n\t   typeof self !== \"undefined\" && self\n\t|| typeof window !== \"undefined\" && window\n\t|| this.content\n));\n// `self` is undefined in Firefox for Android content script context\n// while `this` is nsIContentFrameMessageManager\n// with an attribute `content` that corresponds to the window\n\nif (typeof module !== \"undefined\" && module.exports) {\n  module.exports.saveAs = saveAs;\n} else if ((typeof define !== \"undefined\" && define !== null) && (define.amd !== null)) {\n  define(\"FileSaver.js\", function() {\n    return saveAs;\n  });\n}\n","/*\nCopyright 2018 New Vector Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport zxcvbn from 'zxcvbn';\n\nimport MatrixClientPeg from '../MatrixClientPeg';\nimport { _t, _td } from '../languageHandler';\n\nconst ZXCVBN_USER_INPUTS = [\n    'riot',\n    'matrix',\n];\n\n// Translations for zxcvbn's suggestion strings\n_td(\"Use a few words, avoid common phrases\");\n_td(\"No need for symbols, digits, or uppercase letters\");\n_td(\"Use a longer keyboard pattern with more turns\");\n_td(\"Avoid repeated words and characters\");\n_td(\"Avoid sequences\");\n_td(\"Avoid recent years\");\n_td(\"Avoid years that are associated with you\");\n_td(\"Avoid dates and years that are associated with you\");\n_td(\"Capitalization doesn't help very much\");\n_td(\"All-uppercase is almost as easy to guess as all-lowercase\");\n_td(\"Reversed words aren't much harder to guess\");\n_td(\"Predictable substitutions like '@' instead of 'a' don't help very much\");\n_td(\"Add another word or two. Uncommon words are better.\");\n\n// and warnings\n_td(\"Repeats like \\\"aaa\\\" are easy to guess\");\n_td(\"Repeats like \\\"abcabcabc\\\" are only slightly harder to guess than \\\"abc\\\"\");\n_td(\"Sequences like abc or 6543 are easy to guess\");\n_td(\"Recent years are easy to guess\");\n_td(\"Dates are often easy to guess\");\n_td(\"This is a top-10 common password\");\n_td(\"This is a top-100 common password\");\n_td(\"This is a very common password\");\n_td(\"This is similar to a commonly used password\");\n_td(\"A word by itself is easy to guess\");\n_td(\"Names and surnames by themselves are easy to guess\");\n_td(\"Common names and surnames are easy to guess\");\n_td(\"Straight rows of keys are easy to guess\");\n_td(\"Short keyboard patterns are easy to guess\");\n\n/**\n * Wrapper around zxcvbn password strength estimation\n * Include this only from async components: it pulls in zxcvbn\n * (obviously) which is large.\n *\n * @param {string} password Password to score\n * @returns {object} Score result with `score` and `feedback` properties\n */\nexport function scorePassword(password) {\n    if (password.length === 0) return null;\n\n    const userInputs = ZXCVBN_USER_INPUTS.slice();\n    if (MatrixClientPeg.get()) {\n        userInputs.push(MatrixClientPeg.get().getUserIdLocalpart());\n    }\n\n    let zxcvbnResult = zxcvbn(password, userInputs);\n    // Work around https://github.com/dropbox/zxcvbn/issues/216\n    if (password.includes(' ')) {\n        const resultNoSpaces = zxcvbn(password.replace(/ /g, ''), userInputs);\n        if (resultNoSpaces.score < zxcvbnResult.score) zxcvbnResult = resultNoSpaces;\n    }\n\n    for (let i = 0; i < zxcvbnResult.feedback.suggestions.length; ++i) {\n        // translate suggestions\n        zxcvbnResult.feedback.suggestions[i] = _t(zxcvbnResult.feedback.suggestions[i]);\n    }\n    // and warning, if any\n    if (zxcvbnResult.feedback.warning) {\n        zxcvbnResult.feedback.warning = _t(zxcvbnResult.feedback.warning);\n    }\n\n    return zxcvbnResult;\n}\n"],"sourceRoot":""}