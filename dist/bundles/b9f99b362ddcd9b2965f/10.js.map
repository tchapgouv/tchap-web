{"version":3,"sources":["node_modules/matrix-react-sdk/lib/async-components/views/dialogs/EncryptedEventDialog.js"],"names":["_promise2","_interopRequireDefault","_propTypes2","_languageHandler","obj","__esModule","default","React","sdk","MatrixClientPeg","module","exports","createClass","displayName","propTypes","event","object","isRequired","onFinished","func","getInitialState","device","componentWillMount","_this","this","_unmounted","client","get","refreshDevice","then","dev","downloadKeys","props","getSender","setState","on","onDeviceVerificationChanged","err","console","log","componentWillUnmount","removeListener","resolve","getEventSenderDeviceInfo","userId","_this2","onKeyDown","e","keyCode","stopPropagation","preventDefault","_renderDeviceInfo","state","createElement","_t","verificationStatus","isBlocked","isVerified","getDisplayName","deviceId","getFingerprint","_renderEventInfo","getSenderKey","getKeysClaimed","ed25519","getWireContent","algorithm","getContent","msgtype","body","session_id","render","DeviceVerifyButtons","getComponent","buttons","className","onClick","autoFocus"],"mappings":"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","file":"bundles/b9f99b362ddcd9b2965f/10.js","sourcesContent":["'use strict';\n\nvar _promise = require('babel-runtime/core-js/promise');\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _languageHandler = require('../../../languageHandler');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\nCopyright 2015, 2016 OpenMarket Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nvar React = require(\"react\");\n\nvar sdk = require('../../../index');\nvar MatrixClientPeg = require(\"../../../MatrixClientPeg\");\n\nmodule.exports = React.createClass({\n    displayName: 'EncryptedEventDialog',\n\n    propTypes: {\n        event: _propTypes2.default.object.isRequired,\n        onFinished: _propTypes2.default.func.isRequired\n    },\n\n    getInitialState: function getInitialState() {\n        return { device: null };\n    },\n\n    componentWillMount: function componentWillMount() {\n        var _this = this;\n\n        this._unmounted = false;\n        var client = MatrixClientPeg.get();\n\n        // first try to load the device from our store.\n        //\n        this.refreshDevice().then(function (dev) {\n            if (dev) {\n                return dev;\n            }\n\n            // tell the client to try to refresh the device list for this user\n            return client.downloadKeys([_this.props.event.getSender()], true).then(function () {\n                return _this.refreshDevice();\n            });\n        }).then(function (dev) {\n            if (_this._unmounted) {\n                return;\n            }\n\n            _this.setState({ device: dev });\n            client.on(\"deviceVerificationChanged\", _this.onDeviceVerificationChanged);\n        }, function (err) {\n            console.log(\"Error downloading devices\", err);\n        });\n    },\n\n    componentWillUnmount: function componentWillUnmount() {\n        this._unmounted = true;\n        var client = MatrixClientPeg.get();\n        if (client) {\n            client.removeListener(\"deviceVerificationChanged\", this.onDeviceVerificationChanged);\n        }\n    },\n\n    refreshDevice: function refreshDevice() {\n        // Promise.resolve to handle transition from static result to promise; can be removed\n        // in future\n        return _promise2.default.resolve(MatrixClientPeg.get().getEventSenderDeviceInfo(this.props.event));\n    },\n\n    onDeviceVerificationChanged: function onDeviceVerificationChanged(userId, device) {\n        var _this2 = this;\n\n        if (userId == this.props.event.getSender()) {\n            this.refreshDevice().then(function (dev) {\n                _this2.setState({ device: dev });\n            });\n        }\n    },\n\n    onKeyDown: function onKeyDown(e) {\n        if (e.keyCode === 27) {\n            // escape\n            e.stopPropagation();\n            e.preventDefault();\n            this.props.onFinished(false);\n        }\n    },\n\n    _renderDeviceInfo: function _renderDeviceInfo() {\n        var device = this.state.device;\n        if (!device) {\n            return React.createElement(\n                'i',\n                null,\n                (0, _languageHandler._t)('unknown device')\n            );\n        }\n\n        var verificationStatus = React.createElement(\n            'b',\n            null,\n            (0, _languageHandler._t)('NOT verified')\n        );\n        if (device.isBlocked()) {\n            verificationStatus = React.createElement(\n                'b',\n                null,\n                (0, _languageHandler._t)('Blacklisted')\n            );\n        } else if (device.isVerified()) {\n            verificationStatus = (0, _languageHandler._t)('verified');\n        }\n\n        return React.createElement(\n            'table',\n            null,\n            React.createElement(\n                'tbody',\n                null,\n                React.createElement(\n                    'tr',\n                    null,\n                    React.createElement(\n                        'td',\n                        null,\n                        (0, _languageHandler._t)('Name')\n                    ),\n                    React.createElement(\n                        'td',\n                        null,\n                        device.getDisplayName()\n                    )\n                ),\n                React.createElement(\n                    'tr',\n                    null,\n                    React.createElement(\n                        'td',\n                        null,\n                        (0, _languageHandler._t)('Device ID')\n                    ),\n                    React.createElement(\n                        'td',\n                        null,\n                        React.createElement(\n                            'code',\n                            null,\n                            device.deviceId\n                        )\n                    )\n                ),\n                React.createElement(\n                    'tr',\n                    null,\n                    React.createElement(\n                        'td',\n                        null,\n                        (0, _languageHandler._t)('Verification')\n                    ),\n                    React.createElement(\n                        'td',\n                        null,\n                        verificationStatus\n                    )\n                ),\n                React.createElement(\n                    'tr',\n                    null,\n                    React.createElement(\n                        'td',\n                        null,\n                        (0, _languageHandler._t)('Ed25519 fingerprint')\n                    ),\n                    React.createElement(\n                        'td',\n                        null,\n                        React.createElement(\n                            'code',\n                            null,\n                            device.getFingerprint()\n                        )\n                    )\n                )\n            )\n        );\n    },\n\n    _renderEventInfo: function _renderEventInfo() {\n        var event = this.props.event;\n\n        return React.createElement(\n            'table',\n            null,\n            React.createElement(\n                'tbody',\n                null,\n                React.createElement(\n                    'tr',\n                    null,\n                    React.createElement(\n                        'td',\n                        null,\n                        (0, _languageHandler._t)('User ID')\n                    ),\n                    React.createElement(\n                        'td',\n                        null,\n                        event.getSender()\n                    )\n                ),\n                React.createElement(\n                    'tr',\n                    null,\n                    React.createElement(\n                        'td',\n                        null,\n                        (0, _languageHandler._t)('Curve25519 identity key')\n                    ),\n                    React.createElement(\n                        'td',\n                        null,\n                        React.createElement(\n                            'code',\n                            null,\n                            event.getSenderKey() || React.createElement(\n                                'i',\n                                null,\n                                (0, _languageHandler._t)('none')\n                            )\n                        )\n                    )\n                ),\n                React.createElement(\n                    'tr',\n                    null,\n                    React.createElement(\n                        'td',\n                        null,\n                        (0, _languageHandler._t)('Claimed Ed25519 fingerprint key')\n                    ),\n                    React.createElement(\n                        'td',\n                        null,\n                        React.createElement(\n                            'code',\n                            null,\n                            event.getKeysClaimed().ed25519 || React.createElement(\n                                'i',\n                                null,\n                                (0, _languageHandler._t)('none')\n                            )\n                        )\n                    )\n                ),\n                React.createElement(\n                    'tr',\n                    null,\n                    React.createElement(\n                        'td',\n                        null,\n                        (0, _languageHandler._t)('Algorithm')\n                    ),\n                    React.createElement(\n                        'td',\n                        null,\n                        event.getWireContent().algorithm || React.createElement(\n                            'i',\n                            null,\n                            (0, _languageHandler._t)('unencrypted')\n                        )\n                    )\n                ),\n                event.getContent().msgtype === 'm.bad.encrypted' ? React.createElement(\n                    'tr',\n                    null,\n                    React.createElement(\n                        'td',\n                        null,\n                        (0, _languageHandler._t)('Decryption error')\n                    ),\n                    React.createElement(\n                        'td',\n                        null,\n                        (0, _languageHandler._t)(event.getContent().body)\n                    )\n                ) : null,\n                React.createElement(\n                    'tr',\n                    null,\n                    React.createElement(\n                        'td',\n                        null,\n                        (0, _languageHandler._t)('Session ID')\n                    ),\n                    React.createElement(\n                        'td',\n                        null,\n                        React.createElement(\n                            'code',\n                            null,\n                            event.getWireContent().session_id || React.createElement(\n                                'i',\n                                null,\n                                (0, _languageHandler._t)('none')\n                            )\n                        )\n                    )\n                )\n            )\n        );\n    },\n\n    render: function render() {\n        var DeviceVerifyButtons = sdk.getComponent('elements.DeviceVerifyButtons');\n\n        var buttons = null;\n        if (this.state.device) {\n            buttons = React.createElement(DeviceVerifyButtons, { device: this.state.device,\n                userId: this.props.event.getSender()\n            });\n        }\n\n        return React.createElement(\n            'div',\n            { className: 'mx_EncryptedEventDialog', onKeyDown: this.onKeyDown },\n            React.createElement(\n                'div',\n                { className: 'mx_Dialog_title' },\n                (0, _languageHandler._t)('End-to-end encryption information')\n            ),\n            React.createElement(\n                'div',\n                { className: 'mx_Dialog_content' },\n                React.createElement(\n                    'h4',\n                    null,\n                    (0, _languageHandler._t)('Event information')\n                ),\n                this._renderEventInfo(),\n                React.createElement(\n                    'h4',\n                    null,\n                    (0, _languageHandler._t)('Sender device information')\n                ),\n                this._renderDeviceInfo()\n            ),\n            React.createElement(\n                'div',\n                { className: 'mx_Dialog_buttons' },\n                React.createElement(\n                    'button',\n                    { className: 'mx_Dialog_primary', onClick: this.props.onFinished, autoFocus: true },\n                    (0, _languageHandler._t)('OK')\n                ),\n                buttons\n            )\n        );\n    }\n});\n//# sourceMappingURL=EncryptedEventDialog.js.map"],"sourceRoot":""}